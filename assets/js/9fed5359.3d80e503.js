"use strict";(globalThis.webpackChunkts_generics=globalThis.webpackChunkts_generics||[]).push([[815],{5543:e=>{e.exports=JSON.parse('{"tag":{"label":"array","permalink":"/ts-generics/tags/array","allTagsPath":"/ts-generics/tags","count":5,"items":[{"id":"easy/concat","title":"Concat","description":"Implement the JavaScript Array.concat function in the type system. A type takes the two arguments. The output should be a new array that includes inputs in ltr order","permalink":"/ts-generics/easy/concat"},{"id":"easy/first-of-array","title":"First of Array","description":"Implement a generic First that takes an Array T and returns its first element\'s type.","permalink":"/ts-generics/easy/first-of-array"},{"id":"medium/last-of-array","title":"Last of Array","description":"Implement a generic Last that takes an Array T and returns its last element.","permalink":"/ts-generics/medium/last-of-array"},{"id":"easy/push","title":"Push","description":"Implement the generic version of Array.push","permalink":"/ts-generics/easy/push"},{"id":"easy/unshift","title":"Unshift","description":"Implement the generic version of Array.unshift","permalink":"/ts-generics/easy/unshift"}],"unlisted":false}}')}}]);